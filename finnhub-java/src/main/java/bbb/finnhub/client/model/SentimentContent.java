/*
 * Finnhub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package bbb.finnhub.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SentimentContent
 */
@JsonPropertyOrder({
  SentimentContent.JSON_PROPERTY_MENTION,
  SentimentContent.JSON_PROPERTY_POSITIVE_MENTION,
  SentimentContent.JSON_PROPERTY_NEGATIVE_MENTION,
  SentimentContent.JSON_PROPERTY_POSITIVE_SCORE,
  SentimentContent.JSON_PROPERTY_NEGATIVE_SCORE,
  SentimentContent.JSON_PROPERTY_SCORE,
  SentimentContent.JSON_PROPERTY_AT_TIME
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class SentimentContent {
  public static final String JSON_PROPERTY_MENTION = "mention";
  @javax.annotation.Nullable
  private Long mention;

  public static final String JSON_PROPERTY_POSITIVE_MENTION = "positiveMention";
  @javax.annotation.Nullable
  private Long positiveMention;

  public static final String JSON_PROPERTY_NEGATIVE_MENTION = "negativeMention";
  @javax.annotation.Nullable
  private Long negativeMention;

  public static final String JSON_PROPERTY_POSITIVE_SCORE = "positiveScore";
  @javax.annotation.Nullable
  private Float positiveScore;

  public static final String JSON_PROPERTY_NEGATIVE_SCORE = "negativeScore";
  @javax.annotation.Nullable
  private Float negativeScore;

  public static final String JSON_PROPERTY_SCORE = "score";
  @javax.annotation.Nullable
  private Float score;

  public static final String JSON_PROPERTY_AT_TIME = "atTime";
  @javax.annotation.Nullable
  private String atTime;

  public SentimentContent() {
  }

  public SentimentContent mention(@javax.annotation.Nullable Long mention) {
    
    this.mention = mention;
    return this;
  }

  /**
   * Number of mentions
   * @return mention
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getMention() {
    return mention;
  }


  @JsonProperty(JSON_PROPERTY_MENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMention(@javax.annotation.Nullable Long mention) {
    this.mention = mention;
  }

  public SentimentContent positiveMention(@javax.annotation.Nullable Long positiveMention) {
    
    this.positiveMention = positiveMention;
    return this;
  }

  /**
   * Number of positive mentions
   * @return positiveMention
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSITIVE_MENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getPositiveMention() {
    return positiveMention;
  }


  @JsonProperty(JSON_PROPERTY_POSITIVE_MENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPositiveMention(@javax.annotation.Nullable Long positiveMention) {
    this.positiveMention = positiveMention;
  }

  public SentimentContent negativeMention(@javax.annotation.Nullable Long negativeMention) {
    
    this.negativeMention = negativeMention;
    return this;
  }

  /**
   * Number of negative mentions
   * @return negativeMention
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEGATIVE_MENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getNegativeMention() {
    return negativeMention;
  }


  @JsonProperty(JSON_PROPERTY_NEGATIVE_MENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNegativeMention(@javax.annotation.Nullable Long negativeMention) {
    this.negativeMention = negativeMention;
  }

  public SentimentContent positiveScore(@javax.annotation.Nullable Float positiveScore) {
    
    this.positiveScore = positiveScore;
    return this;
  }

  /**
   * Positive score. Range 0-1
   * @return positiveScore
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSITIVE_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getPositiveScore() {
    return positiveScore;
  }


  @JsonProperty(JSON_PROPERTY_POSITIVE_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPositiveScore(@javax.annotation.Nullable Float positiveScore) {
    this.positiveScore = positiveScore;
  }

  public SentimentContent negativeScore(@javax.annotation.Nullable Float negativeScore) {
    
    this.negativeScore = negativeScore;
    return this;
  }

  /**
   * Negative score. Range 0-1
   * @return negativeScore
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEGATIVE_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getNegativeScore() {
    return negativeScore;
  }


  @JsonProperty(JSON_PROPERTY_NEGATIVE_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNegativeScore(@javax.annotation.Nullable Float negativeScore) {
    this.negativeScore = negativeScore;
  }

  public SentimentContent score(@javax.annotation.Nullable Float score) {
    
    this.score = score;
    return this;
  }

  /**
   * Final score. Range: -1 to 1 with 1 is very positive and -1 is very negative
   * @return score
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getScore() {
    return score;
  }


  @JsonProperty(JSON_PROPERTY_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScore(@javax.annotation.Nullable Float score) {
    this.score = score;
  }

  public SentimentContent atTime(@javax.annotation.Nullable String atTime) {
    
    this.atTime = atTime;
    return this;
  }

  /**
   * Period.
   * @return atTime
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AT_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAtTime() {
    return atTime;
  }


  @JsonProperty(JSON_PROPERTY_AT_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAtTime(@javax.annotation.Nullable String atTime) {
    this.atTime = atTime;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SentimentContent sentimentContent = (SentimentContent) o;
    return Objects.equals(this.mention, sentimentContent.mention) &&
        Objects.equals(this.positiveMention, sentimentContent.positiveMention) &&
        Objects.equals(this.negativeMention, sentimentContent.negativeMention) &&
        Objects.equals(this.positiveScore, sentimentContent.positiveScore) &&
        Objects.equals(this.negativeScore, sentimentContent.negativeScore) &&
        Objects.equals(this.score, sentimentContent.score) &&
        Objects.equals(this.atTime, sentimentContent.atTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mention, positiveMention, negativeMention, positiveScore, negativeScore, score, atTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SentimentContent {\n");
    sb.append("    mention: ").append(toIndentedString(mention)).append("\n");
    sb.append("    positiveMention: ").append(toIndentedString(positiveMention)).append("\n");
    sb.append("    negativeMention: ").append(toIndentedString(negativeMention)).append("\n");
    sb.append("    positiveScore: ").append(toIndentedString(positiveScore)).append("\n");
    sb.append("    negativeScore: ").append(toIndentedString(negativeScore)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    atTime: ").append(toIndentedString(atTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

