/*
 * Finnhub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package bbb.finnhub.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * StockSymbol
 */
@JsonPropertyOrder({
  StockSymbol.JSON_PROPERTY_DESCRIPTION,
  StockSymbol.JSON_PROPERTY_DISPLAY_SYMBOL,
  StockSymbol.JSON_PROPERTY_SYMBOL,
  StockSymbol.JSON_PROPERTY_TYPE,
  StockSymbol.JSON_PROPERTY_MIC,
  StockSymbol.JSON_PROPERTY_FIGI,
  StockSymbol.JSON_PROPERTY_SHARE_CLASS_F_I_G_I,
  StockSymbol.JSON_PROPERTY_CURRENCY,
  StockSymbol.JSON_PROPERTY_SYMBOL2,
  StockSymbol.JSON_PROPERTY_ISIN
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class StockSymbol {
  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @javax.annotation.Nullable
  private String description;

  public static final String JSON_PROPERTY_DISPLAY_SYMBOL = "displaySymbol";
  @javax.annotation.Nullable
  private String displaySymbol;

  public static final String JSON_PROPERTY_SYMBOL = "symbol";
  @javax.annotation.Nullable
  private String symbol;

  public static final String JSON_PROPERTY_TYPE = "type";
  @javax.annotation.Nullable
  private String type;

  public static final String JSON_PROPERTY_MIC = "mic";
  @javax.annotation.Nullable
  private String mic;

  public static final String JSON_PROPERTY_FIGI = "figi";
  @javax.annotation.Nullable
  private String figi;

  public static final String JSON_PROPERTY_SHARE_CLASS_F_I_G_I = "shareClassFIGI";
  @javax.annotation.Nullable
  private String shareClassFIGI;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  @javax.annotation.Nullable
  private String currency;

  public static final String JSON_PROPERTY_SYMBOL2 = "symbol2";
  @javax.annotation.Nullable
  private String symbol2;

  public static final String JSON_PROPERTY_ISIN = "isin";
  @javax.annotation.Nullable
  private String isin;

  public StockSymbol() {
  }

  public StockSymbol description(@javax.annotation.Nullable String description) {
    
    this.description = description;
    return this;
  }

  /**
   * Symbol description
   * @return description
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }

  public StockSymbol displaySymbol(@javax.annotation.Nullable String displaySymbol) {
    
    this.displaySymbol = displaySymbol;
    return this;
  }

  /**
   * Display symbol name.
   * @return displaySymbol
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISPLAY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplaySymbol() {
    return displaySymbol;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplaySymbol(@javax.annotation.Nullable String displaySymbol) {
    this.displaySymbol = displaySymbol;
  }

  public StockSymbol symbol(@javax.annotation.Nullable String symbol) {
    
    this.symbol = symbol;
    return this;
  }

  /**
   * Unique symbol used to identify this symbol used in &lt;code&gt;/stock/candle&lt;/code&gt; endpoint.
   * @return symbol
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSymbol() {
    return symbol;
  }


  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSymbol(@javax.annotation.Nullable String symbol) {
    this.symbol = symbol;
  }

  public StockSymbol type(@javax.annotation.Nullable String type) {
    
    this.type = type;
    return this;
  }

  /**
   * Security type.
   * @return type
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(@javax.annotation.Nullable String type) {
    this.type = type;
  }

  public StockSymbol mic(@javax.annotation.Nullable String mic) {
    
    this.mic = mic;
    return this;
  }

  /**
   * Primary exchange&#39;s MIC.
   * @return mic
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMic() {
    return mic;
  }


  @JsonProperty(JSON_PROPERTY_MIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMic(@javax.annotation.Nullable String mic) {
    this.mic = mic;
  }

  public StockSymbol figi(@javax.annotation.Nullable String figi) {
    
    this.figi = figi;
    return this;
  }

  /**
   * FIGI identifier.
   * @return figi
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIGI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFigi() {
    return figi;
  }


  @JsonProperty(JSON_PROPERTY_FIGI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFigi(@javax.annotation.Nullable String figi) {
    this.figi = figi;
  }

  public StockSymbol shareClassFIGI(@javax.annotation.Nullable String shareClassFIGI) {
    
    this.shareClassFIGI = shareClassFIGI;
    return this;
  }

  /**
   * Global Share Class FIGI.
   * @return shareClassFIGI
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHARE_CLASS_F_I_G_I)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getShareClassFIGI() {
    return shareClassFIGI;
  }


  @JsonProperty(JSON_PROPERTY_SHARE_CLASS_F_I_G_I)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShareClassFIGI(@javax.annotation.Nullable String shareClassFIGI) {
    this.shareClassFIGI = shareClassFIGI;
  }

  public StockSymbol currency(@javax.annotation.Nullable String currency) {
    
    this.currency = currency;
    return this;
  }

  /**
   * Price&#39;s currency. This might be different from the reporting currency of fundamental data.
   * @return currency
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(@javax.annotation.Nullable String currency) {
    this.currency = currency;
  }

  public StockSymbol symbol2(@javax.annotation.Nullable String symbol2) {
    
    this.symbol2 = symbol2;
    return this;
  }

  /**
   * Alternative ticker for exchanges with multiple tickers for 1 stock such as BSE.
   * @return symbol2
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SYMBOL2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSymbol2() {
    return symbol2;
  }


  @JsonProperty(JSON_PROPERTY_SYMBOL2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSymbol2(@javax.annotation.Nullable String symbol2) {
    this.symbol2 = symbol2;
  }

  public StockSymbol isin(@javax.annotation.Nullable String isin) {
    
    this.isin = isin;
    return this;
  }

  /**
   * ISIN. This field is only available for EU stocks and selected Asian markets. Entitlement from Finnhub is required to access this field.
   * @return isin
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ISIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIsin() {
    return isin;
  }


  @JsonProperty(JSON_PROPERTY_ISIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsin(@javax.annotation.Nullable String isin) {
    this.isin = isin;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StockSymbol stockSymbol = (StockSymbol) o;
    return Objects.equals(this.description, stockSymbol.description) &&
        Objects.equals(this.displaySymbol, stockSymbol.displaySymbol) &&
        Objects.equals(this.symbol, stockSymbol.symbol) &&
        Objects.equals(this.type, stockSymbol.type) &&
        Objects.equals(this.mic, stockSymbol.mic) &&
        Objects.equals(this.figi, stockSymbol.figi) &&
        Objects.equals(this.shareClassFIGI, stockSymbol.shareClassFIGI) &&
        Objects.equals(this.currency, stockSymbol.currency) &&
        Objects.equals(this.symbol2, stockSymbol.symbol2) &&
        Objects.equals(this.isin, stockSymbol.isin);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, displaySymbol, symbol, type, mic, figi, shareClassFIGI, currency, symbol2, isin);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StockSymbol {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displaySymbol: ").append(toIndentedString(displaySymbol)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    mic: ").append(toIndentedString(mic)).append("\n");
    sb.append("    figi: ").append(toIndentedString(figi)).append("\n");
    sb.append("    shareClassFIGI: ").append(toIndentedString(shareClassFIGI)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    symbol2: ").append(toIndentedString(symbol2)).append("\n");
    sb.append("    isin: ").append(toIndentedString(isin)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

