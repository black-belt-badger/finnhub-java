/*
 * Finnhub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package bbb.finnhub.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BondCandles
 */
@JsonPropertyOrder({
  BondCandles.JSON_PROPERTY_C,
  BondCandles.JSON_PROPERTY_T,
  BondCandles.JSON_PROPERTY_S
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class BondCandles {
  public static final String JSON_PROPERTY_C = "c";
  @javax.annotation.Nullable
  private List<Float> c = new ArrayList<>();

  public static final String JSON_PROPERTY_T = "t";
  @javax.annotation.Nullable
  private List<Long> t = new ArrayList<>();

  public static final String JSON_PROPERTY_S = "s";
  @javax.annotation.Nullable
  private String s;

  public BondCandles() {
  }

  public BondCandles c(@javax.annotation.Nullable List<Float> c) {
    
    this.c = c;
    return this;
  }

  public BondCandles addCItem(Float cItem) {
    if (this.c == null) {
      this.c = new ArrayList<>();
    }
    this.c.add(cItem);
    return this;
  }

  /**
   * List of close prices for returned candles.
   * @return c
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_C)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Float> getC() {
    return c;
  }


  @JsonProperty(JSON_PROPERTY_C)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setC(@javax.annotation.Nullable List<Float> c) {
    this.c = c;
  }

  public BondCandles t(@javax.annotation.Nullable List<Long> t) {
    
    this.t = t;
    return this;
  }

  public BondCandles addTItem(Long tItem) {
    if (this.t == null) {
      this.t = new ArrayList<>();
    }
    this.t.add(tItem);
    return this;
  }

  /**
   * List of timestamp for returned candles.
   * @return t
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Long> getT() {
    return t;
  }


  @JsonProperty(JSON_PROPERTY_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setT(@javax.annotation.Nullable List<Long> t) {
    this.t = t;
  }

  public BondCandles s(@javax.annotation.Nullable String s) {
    
    this.s = s;
    return this;
  }

  /**
   * Status of the response. This field can either be ok or no_data.
   * @return s
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_S)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getS() {
    return s;
  }


  @JsonProperty(JSON_PROPERTY_S)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setS(@javax.annotation.Nullable String s) {
    this.s = s;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BondCandles bondCandles = (BondCandles) o;
    return Objects.equals(this.c, bondCandles.c) &&
        Objects.equals(this.t, bondCandles.t) &&
        Objects.equals(this.s, bondCandles.s);
  }

  @Override
  public int hashCode() {
    return Objects.hash(c, t, s);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BondCandles {\n");
    sb.append("    c: ").append(toIndentedString(c)).append("\n");
    sb.append("    t: ").append(toIndentedString(t)).append("\n");
    sb.append("    s: ").append(toIndentedString(s)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

