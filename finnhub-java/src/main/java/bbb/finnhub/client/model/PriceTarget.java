/*
 * Finnhub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package bbb.finnhub.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PriceTarget
 */
@JsonPropertyOrder({
  PriceTarget.JSON_PROPERTY_SYMBOL,
  PriceTarget.JSON_PROPERTY_TARGET_HIGH,
  PriceTarget.JSON_PROPERTY_TARGET_LOW,
  PriceTarget.JSON_PROPERTY_TARGET_MEAN,
  PriceTarget.JSON_PROPERTY_TARGET_MEDIAN,
  PriceTarget.JSON_PROPERTY_NUMBER_ANALYSTS,
  PriceTarget.JSON_PROPERTY_LAST_UPDATED
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class PriceTarget {
  public static final String JSON_PROPERTY_SYMBOL = "symbol";
  @javax.annotation.Nullable
  private String symbol;

  public static final String JSON_PROPERTY_TARGET_HIGH = "targetHigh";
  @javax.annotation.Nullable
  private Float targetHigh;

  public static final String JSON_PROPERTY_TARGET_LOW = "targetLow";
  @javax.annotation.Nullable
  private Float targetLow;

  public static final String JSON_PROPERTY_TARGET_MEAN = "targetMean";
  @javax.annotation.Nullable
  private Float targetMean;

  public static final String JSON_PROPERTY_TARGET_MEDIAN = "targetMedian";
  @javax.annotation.Nullable
  private Float targetMedian;

  public static final String JSON_PROPERTY_NUMBER_ANALYSTS = "numberAnalysts";
  @javax.annotation.Nullable
  private Long numberAnalysts;

  public static final String JSON_PROPERTY_LAST_UPDATED = "lastUpdated";
  @javax.annotation.Nullable
  private String lastUpdated;

  public PriceTarget() {
  }

  public PriceTarget symbol(@javax.annotation.Nullable String symbol) {
    
    this.symbol = symbol;
    return this;
  }

  /**
   * Company symbol.
   * @return symbol
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSymbol() {
    return symbol;
  }


  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSymbol(@javax.annotation.Nullable String symbol) {
    this.symbol = symbol;
  }

  public PriceTarget targetHigh(@javax.annotation.Nullable Float targetHigh) {
    
    this.targetHigh = targetHigh;
    return this;
  }

  /**
   * Highes analysts&#39; target.
   * @return targetHigh
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TARGET_HIGH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getTargetHigh() {
    return targetHigh;
  }


  @JsonProperty(JSON_PROPERTY_TARGET_HIGH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTargetHigh(@javax.annotation.Nullable Float targetHigh) {
    this.targetHigh = targetHigh;
  }

  public PriceTarget targetLow(@javax.annotation.Nullable Float targetLow) {
    
    this.targetLow = targetLow;
    return this;
  }

  /**
   * Lowest analysts&#39; target.
   * @return targetLow
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TARGET_LOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getTargetLow() {
    return targetLow;
  }


  @JsonProperty(JSON_PROPERTY_TARGET_LOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTargetLow(@javax.annotation.Nullable Float targetLow) {
    this.targetLow = targetLow;
  }

  public PriceTarget targetMean(@javax.annotation.Nullable Float targetMean) {
    
    this.targetMean = targetMean;
    return this;
  }

  /**
   * Mean of all analysts&#39; targets.
   * @return targetMean
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TARGET_MEAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getTargetMean() {
    return targetMean;
  }


  @JsonProperty(JSON_PROPERTY_TARGET_MEAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTargetMean(@javax.annotation.Nullable Float targetMean) {
    this.targetMean = targetMean;
  }

  public PriceTarget targetMedian(@javax.annotation.Nullable Float targetMedian) {
    
    this.targetMedian = targetMedian;
    return this;
  }

  /**
   * Median of all analysts&#39; targets.
   * @return targetMedian
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TARGET_MEDIAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getTargetMedian() {
    return targetMedian;
  }


  @JsonProperty(JSON_PROPERTY_TARGET_MEDIAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTargetMedian(@javax.annotation.Nullable Float targetMedian) {
    this.targetMedian = targetMedian;
  }

  public PriceTarget numberAnalysts(@javax.annotation.Nullable Long numberAnalysts) {
    
    this.numberAnalysts = numberAnalysts;
    return this;
  }

  /**
   * Number of Analysts.
   * @return numberAnalysts
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMBER_ANALYSTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getNumberAnalysts() {
    return numberAnalysts;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_ANALYSTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumberAnalysts(@javax.annotation.Nullable Long numberAnalysts) {
    this.numberAnalysts = numberAnalysts;
  }

  public PriceTarget lastUpdated(@javax.annotation.Nullable String lastUpdated) {
    
    this.lastUpdated = lastUpdated;
    return this;
  }

  /**
   * Updated time of the data
   * @return lastUpdated
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_UPDATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastUpdated() {
    return lastUpdated;
  }


  @JsonProperty(JSON_PROPERTY_LAST_UPDATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastUpdated(@javax.annotation.Nullable String lastUpdated) {
    this.lastUpdated = lastUpdated;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PriceTarget priceTarget = (PriceTarget) o;
    return Objects.equals(this.symbol, priceTarget.symbol) &&
        Objects.equals(this.targetHigh, priceTarget.targetHigh) &&
        Objects.equals(this.targetLow, priceTarget.targetLow) &&
        Objects.equals(this.targetMean, priceTarget.targetMean) &&
        Objects.equals(this.targetMedian, priceTarget.targetMedian) &&
        Objects.equals(this.numberAnalysts, priceTarget.numberAnalysts) &&
        Objects.equals(this.lastUpdated, priceTarget.lastUpdated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbol, targetHigh, targetLow, targetMean, targetMedian, numberAnalysts, lastUpdated);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PriceTarget {\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    targetHigh: ").append(toIndentedString(targetHigh)).append("\n");
    sb.append("    targetLow: ").append(toIndentedString(targetLow)).append("\n");
    sb.append("    targetMean: ").append(toIndentedString(targetMean)).append("\n");
    sb.append("    targetMedian: ").append(toIndentedString(targetMedian)).append("\n");
    sb.append("    numberAnalysts: ").append(toIndentedString(numberAnalysts)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

