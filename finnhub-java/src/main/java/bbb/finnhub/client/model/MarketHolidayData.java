/*
 * Finnhub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package bbb.finnhub.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * MarketHolidayData
 */
@JsonPropertyOrder({
  MarketHolidayData.JSON_PROPERTY_EVENT_NAME,
  MarketHolidayData.JSON_PROPERTY_AT_DATE,
  MarketHolidayData.JSON_PROPERTY_TRADING_HOUR
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class MarketHolidayData {
  public static final String JSON_PROPERTY_EVENT_NAME = "eventName";
  @javax.annotation.Nullable
  private String eventName;

  public static final String JSON_PROPERTY_AT_DATE = "atDate";
  @javax.annotation.Nullable
  private String atDate;

  public static final String JSON_PROPERTY_TRADING_HOUR = "tradingHour";
  @javax.annotation.Nullable
  private String tradingHour;

  public MarketHolidayData() {
  }

  public MarketHolidayData eventName(@javax.annotation.Nullable String eventName) {
    
    this.eventName = eventName;
    return this;
  }

  /**
   * Holiday&#39;s name.
   * @return eventName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EVENT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEventName() {
    return eventName;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventName(@javax.annotation.Nullable String eventName) {
    this.eventName = eventName;
  }

  public MarketHolidayData atDate(@javax.annotation.Nullable String atDate) {
    
    this.atDate = atDate;
    return this;
  }

  /**
   * Date.
   * @return atDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAtDate() {
    return atDate;
  }


  @JsonProperty(JSON_PROPERTY_AT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAtDate(@javax.annotation.Nullable String atDate) {
    this.atDate = atDate;
  }

  public MarketHolidayData tradingHour(@javax.annotation.Nullable String tradingHour) {
    
    this.tradingHour = tradingHour;
    return this;
  }

  /**
   * Trading hours for this day if the market is partially closed only.
   * @return tradingHour
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRADING_HOUR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTradingHour() {
    return tradingHour;
  }


  @JsonProperty(JSON_PROPERTY_TRADING_HOUR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTradingHour(@javax.annotation.Nullable String tradingHour) {
    this.tradingHour = tradingHour;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MarketHolidayData marketHolidayData = (MarketHolidayData) o;
    return Objects.equals(this.eventName, marketHolidayData.eventName) &&
        Objects.equals(this.atDate, marketHolidayData.atDate) &&
        Objects.equals(this.tradingHour, marketHolidayData.tradingHour);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventName, atDate, tradingHour);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MarketHolidayData {\n");
    sb.append("    eventName: ").append(toIndentedString(eventName)).append("\n");
    sb.append("    atDate: ").append(toIndentedString(atDate)).append("\n");
    sb.append("    tradingHour: ").append(toIndentedString(tradingHour)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

