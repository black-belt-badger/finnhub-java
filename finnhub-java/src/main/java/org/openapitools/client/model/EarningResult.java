/*
 * Finnhub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * EarningResult
 */
@JsonPropertyOrder({
  EarningResult.JSON_PROPERTY_ACTUAL,
  EarningResult.JSON_PROPERTY_ESTIMATE,
  EarningResult.JSON_PROPERTY_SURPRISE,
  EarningResult.JSON_PROPERTY_SURPRISE_PERCENT,
  EarningResult.JSON_PROPERTY_PERIOD,
  EarningResult.JSON_PROPERTY_SYMBOL,
  EarningResult.JSON_PROPERTY_YEAR,
  EarningResult.JSON_PROPERTY_QUARTER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-29T21:39:04.016977118Z[Etc/UTC]", comments = "Generator version: 7.14.0")
public class EarningResult {
  public static final String JSON_PROPERTY_ACTUAL = "actual";
  @javax.annotation.Nullable
  private Float actual;

  public static final String JSON_PROPERTY_ESTIMATE = "estimate";
  @javax.annotation.Nullable
  private Float estimate;

  public static final String JSON_PROPERTY_SURPRISE = "surprise";
  @javax.annotation.Nullable
  private Float surprise;

  public static final String JSON_PROPERTY_SURPRISE_PERCENT = "surprisePercent";
  @javax.annotation.Nullable
  private Float surprisePercent;

  public static final String JSON_PROPERTY_PERIOD = "period";
  @javax.annotation.Nullable
  private LocalDate period;

  public static final String JSON_PROPERTY_SYMBOL = "symbol";
  @javax.annotation.Nullable
  private String symbol;

  public static final String JSON_PROPERTY_YEAR = "year";
  @javax.annotation.Nullable
  private Long year;

  public static final String JSON_PROPERTY_QUARTER = "quarter";
  @javax.annotation.Nullable
  private Long quarter;

  public EarningResult() {
  }

  public EarningResult actual(@javax.annotation.Nullable Float actual) {
    
    this.actual = actual;
    return this;
  }

  /**
   * Actual earning result.
   * @return actual
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTUAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getActual() {
    return actual;
  }


  @JsonProperty(JSON_PROPERTY_ACTUAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActual(@javax.annotation.Nullable Float actual) {
    this.actual = actual;
  }

  public EarningResult estimate(@javax.annotation.Nullable Float estimate) {
    
    this.estimate = estimate;
    return this;
  }

  /**
   * Estimated earning.
   * @return estimate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ESTIMATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getEstimate() {
    return estimate;
  }


  @JsonProperty(JSON_PROPERTY_ESTIMATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEstimate(@javax.annotation.Nullable Float estimate) {
    this.estimate = estimate;
  }

  public EarningResult surprise(@javax.annotation.Nullable Float surprise) {
    
    this.surprise = surprise;
    return this;
  }

  /**
   * Surprise - The difference between actual and estimate.
   * @return surprise
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SURPRISE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getSurprise() {
    return surprise;
  }


  @JsonProperty(JSON_PROPERTY_SURPRISE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSurprise(@javax.annotation.Nullable Float surprise) {
    this.surprise = surprise;
  }

  public EarningResult surprisePercent(@javax.annotation.Nullable Float surprisePercent) {
    
    this.surprisePercent = surprisePercent;
    return this;
  }

  /**
   * Surprise percent.
   * @return surprisePercent
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SURPRISE_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getSurprisePercent() {
    return surprisePercent;
  }


  @JsonProperty(JSON_PROPERTY_SURPRISE_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSurprisePercent(@javax.annotation.Nullable Float surprisePercent) {
    this.surprisePercent = surprisePercent;
  }

  public EarningResult period(@javax.annotation.Nullable LocalDate period) {
    
    this.period = period;
    return this;
  }

  /**
   * Reported period.
   * @return period
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getPeriod() {
    return period;
  }


  @JsonProperty(JSON_PROPERTY_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPeriod(@javax.annotation.Nullable LocalDate period) {
    this.period = period;
  }

  public EarningResult symbol(@javax.annotation.Nullable String symbol) {
    
    this.symbol = symbol;
    return this;
  }

  /**
   * Company symbol.
   * @return symbol
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSymbol() {
    return symbol;
  }


  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSymbol(@javax.annotation.Nullable String symbol) {
    this.symbol = symbol;
  }

  public EarningResult year(@javax.annotation.Nullable Long year) {
    
    this.year = year;
    return this;
  }

  /**
   * Fiscal year.
   * @return year
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getYear() {
    return year;
  }


  @JsonProperty(JSON_PROPERTY_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setYear(@javax.annotation.Nullable Long year) {
    this.year = year;
  }

  public EarningResult quarter(@javax.annotation.Nullable Long quarter) {
    
    this.quarter = quarter;
    return this;
  }

  /**
   * Fiscal quarter.
   * @return quarter
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUARTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getQuarter() {
    return quarter;
  }


  @JsonProperty(JSON_PROPERTY_QUARTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuarter(@javax.annotation.Nullable Long quarter) {
    this.quarter = quarter;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EarningResult earningResult = (EarningResult) o;
    return Objects.equals(this.actual, earningResult.actual) &&
        Objects.equals(this.estimate, earningResult.estimate) &&
        Objects.equals(this.surprise, earningResult.surprise) &&
        Objects.equals(this.surprisePercent, earningResult.surprisePercent) &&
        Objects.equals(this.period, earningResult.period) &&
        Objects.equals(this.symbol, earningResult.symbol) &&
        Objects.equals(this.year, earningResult.year) &&
        Objects.equals(this.quarter, earningResult.quarter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actual, estimate, surprise, surprisePercent, period, symbol, year, quarter);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EarningResult {\n");
    sb.append("    actual: ").append(toIndentedString(actual)).append("\n");
    sb.append("    estimate: ").append(toIndentedString(estimate)).append("\n");
    sb.append("    surprise: ").append(toIndentedString(surprise)).append("\n");
    sb.append("    surprisePercent: ").append(toIndentedString(surprisePercent)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    year: ").append(toIndentedString(year)).append("\n");
    sb.append("    quarter: ").append(toIndentedString(quarter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

