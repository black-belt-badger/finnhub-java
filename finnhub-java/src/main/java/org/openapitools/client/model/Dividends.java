/*
 * Finnhub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Dividends
 */
@JsonPropertyOrder({
  Dividends.JSON_PROPERTY_SYMBOL,
  Dividends.JSON_PROPERTY_DATE,
  Dividends.JSON_PROPERTY_AMOUNT,
  Dividends.JSON_PROPERTY_ADJUSTED_AMOUNT,
  Dividends.JSON_PROPERTY_PAY_DATE,
  Dividends.JSON_PROPERTY_RECORD_DATE,
  Dividends.JSON_PROPERTY_DECLARATION_DATE,
  Dividends.JSON_PROPERTY_CURRENCY,
  Dividends.JSON_PROPERTY_FREQ
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class Dividends {
  public static final String JSON_PROPERTY_SYMBOL = "symbol";
  @javax.annotation.Nullable
  private String symbol;

  public static final String JSON_PROPERTY_DATE = "date";
  @javax.annotation.Nullable
  private LocalDate date;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  @javax.annotation.Nullable
  private Float amount;

  public static final String JSON_PROPERTY_ADJUSTED_AMOUNT = "adjustedAmount";
  @javax.annotation.Nullable
  private Float adjustedAmount;

  public static final String JSON_PROPERTY_PAY_DATE = "payDate";
  @javax.annotation.Nullable
  private LocalDate payDate;

  public static final String JSON_PROPERTY_RECORD_DATE = "recordDate";
  @javax.annotation.Nullable
  private LocalDate recordDate;

  public static final String JSON_PROPERTY_DECLARATION_DATE = "declarationDate";
  @javax.annotation.Nullable
  private LocalDate declarationDate;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  @javax.annotation.Nullable
  private String currency;

  public static final String JSON_PROPERTY_FREQ = "freq";
  @javax.annotation.Nullable
  private String freq;

  public Dividends() {
  }

  public Dividends symbol(@javax.annotation.Nullable String symbol) {
    
    this.symbol = symbol;
    return this;
  }

  /**
   * Symbol.
   * @return symbol
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSymbol() {
    return symbol;
  }


  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSymbol(@javax.annotation.Nullable String symbol) {
    this.symbol = symbol;
  }

  public Dividends date(@javax.annotation.Nullable LocalDate date) {
    
    this.date = date;
    return this;
  }

  /**
   * Ex-Dividend date.
   * @return date
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(@javax.annotation.Nullable LocalDate date) {
    this.date = date;
  }

  public Dividends amount(@javax.annotation.Nullable Float amount) {
    
    this.amount = amount;
    return this;
  }

  /**
   * Amount in local currency.
   * @return amount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(@javax.annotation.Nullable Float amount) {
    this.amount = amount;
  }

  public Dividends adjustedAmount(@javax.annotation.Nullable Float adjustedAmount) {
    
    this.adjustedAmount = adjustedAmount;
    return this;
  }

  /**
   * Adjusted dividend.
   * @return adjustedAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADJUSTED_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getAdjustedAmount() {
    return adjustedAmount;
  }


  @JsonProperty(JSON_PROPERTY_ADJUSTED_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdjustedAmount(@javax.annotation.Nullable Float adjustedAmount) {
    this.adjustedAmount = adjustedAmount;
  }

  public Dividends payDate(@javax.annotation.Nullable LocalDate payDate) {
    
    this.payDate = payDate;
    return this;
  }

  /**
   * Pay date.
   * @return payDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getPayDate() {
    return payDate;
  }


  @JsonProperty(JSON_PROPERTY_PAY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayDate(@javax.annotation.Nullable LocalDate payDate) {
    this.payDate = payDate;
  }

  public Dividends recordDate(@javax.annotation.Nullable LocalDate recordDate) {
    
    this.recordDate = recordDate;
    return this;
  }

  /**
   * Record date.
   * @return recordDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECORD_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getRecordDate() {
    return recordDate;
  }


  @JsonProperty(JSON_PROPERTY_RECORD_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecordDate(@javax.annotation.Nullable LocalDate recordDate) {
    this.recordDate = recordDate;
  }

  public Dividends declarationDate(@javax.annotation.Nullable LocalDate declarationDate) {
    
    this.declarationDate = declarationDate;
    return this;
  }

  /**
   * Declaration date.
   * @return declarationDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DECLARATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getDeclarationDate() {
    return declarationDate;
  }


  @JsonProperty(JSON_PROPERTY_DECLARATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeclarationDate(@javax.annotation.Nullable LocalDate declarationDate) {
    this.declarationDate = declarationDate;
  }

  public Dividends currency(@javax.annotation.Nullable String currency) {
    
    this.currency = currency;
    return this;
  }

  /**
   * Currency.
   * @return currency
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(@javax.annotation.Nullable String currency) {
    this.currency = currency;
  }

  public Dividends freq(@javax.annotation.Nullable String freq) {
    
    this.freq = freq;
    return this;
  }

  /**
   * &lt;p&gt;Dividend frequency. Can be 1 of the following values:&lt;/p&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;0: Annually&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;1: Monthly&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;2: Quarterly&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;3: Semi-annually&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;4: Other/Unknown&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;5: Bimonthly&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;6: Trimesterly&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;7: Weekly&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;
   * @return freq
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FREQ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFreq() {
    return freq;
  }


  @JsonProperty(JSON_PROPERTY_FREQ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFreq(@javax.annotation.Nullable String freq) {
    this.freq = freq;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Dividends dividends = (Dividends) o;
    return Objects.equals(this.symbol, dividends.symbol) &&
        Objects.equals(this.date, dividends.date) &&
        Objects.equals(this.amount, dividends.amount) &&
        Objects.equals(this.adjustedAmount, dividends.adjustedAmount) &&
        Objects.equals(this.payDate, dividends.payDate) &&
        Objects.equals(this.recordDate, dividends.recordDate) &&
        Objects.equals(this.declarationDate, dividends.declarationDate) &&
        Objects.equals(this.currency, dividends.currency) &&
        Objects.equals(this.freq, dividends.freq);
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbol, date, amount, adjustedAmount, payDate, recordDate, declarationDate, currency, freq);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Dividends {\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    adjustedAmount: ").append(toIndentedString(adjustedAmount)).append("\n");
    sb.append("    payDate: ").append(toIndentedString(payDate)).append("\n");
    sb.append("    recordDate: ").append(toIndentedString(recordDate)).append("\n");
    sb.append("    declarationDate: ").append(toIndentedString(declarationDate)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    freq: ").append(toIndentedString(freq)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

