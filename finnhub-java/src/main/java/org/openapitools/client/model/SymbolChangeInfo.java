/*
 * Finnhub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SymbolChangeInfo
 */
@JsonPropertyOrder({
  SymbolChangeInfo.JSON_PROPERTY_AT_DATE,
  SymbolChangeInfo.JSON_PROPERTY_OLD_SYMBOL,
  SymbolChangeInfo.JSON_PROPERTY_NEW_SYMBOL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class SymbolChangeInfo {
  public static final String JSON_PROPERTY_AT_DATE = "atDate";
  @javax.annotation.Nullable
  private String atDate;

  public static final String JSON_PROPERTY_OLD_SYMBOL = "oldSymbol";
  @javax.annotation.Nullable
  private String oldSymbol;

  public static final String JSON_PROPERTY_NEW_SYMBOL = "newSymbol";
  @javax.annotation.Nullable
  private String newSymbol;

  public SymbolChangeInfo() {
  }

  public SymbolChangeInfo atDate(@javax.annotation.Nullable String atDate) {
    
    this.atDate = atDate;
    return this;
  }

  /**
   * Event&#39;s date.
   * @return atDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAtDate() {
    return atDate;
  }


  @JsonProperty(JSON_PROPERTY_AT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAtDate(@javax.annotation.Nullable String atDate) {
    this.atDate = atDate;
  }

  public SymbolChangeInfo oldSymbol(@javax.annotation.Nullable String oldSymbol) {
    
    this.oldSymbol = oldSymbol;
    return this;
  }

  /**
   * Old symbol.
   * @return oldSymbol
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OLD_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOldSymbol() {
    return oldSymbol;
  }


  @JsonProperty(JSON_PROPERTY_OLD_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOldSymbol(@javax.annotation.Nullable String oldSymbol) {
    this.oldSymbol = oldSymbol;
  }

  public SymbolChangeInfo newSymbol(@javax.annotation.Nullable String newSymbol) {
    
    this.newSymbol = newSymbol;
    return this;
  }

  /**
   * New symbol.
   * @return newSymbol
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEW_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNewSymbol() {
    return newSymbol;
  }


  @JsonProperty(JSON_PROPERTY_NEW_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNewSymbol(@javax.annotation.Nullable String newSymbol) {
    this.newSymbol = newSymbol;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SymbolChangeInfo symbolChangeInfo = (SymbolChangeInfo) o;
    return Objects.equals(this.atDate, symbolChangeInfo.atDate) &&
        Objects.equals(this.oldSymbol, symbolChangeInfo.oldSymbol) &&
        Objects.equals(this.newSymbol, symbolChangeInfo.newSymbol);
  }

  @Override
  public int hashCode() {
    return Objects.hash(atDate, oldSymbol, newSymbol);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SymbolChangeInfo {\n");
    sb.append("    atDate: ").append(toIndentedString(atDate)).append("\n");
    sb.append("    oldSymbol: ").append(toIndentedString(oldSymbol)).append("\n");
    sb.append("    newSymbol: ").append(toIndentedString(newSymbol)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

