/*
 * Finnhub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * InsiderSentimentsData
 */
@JsonPropertyOrder({
  InsiderSentimentsData.JSON_PROPERTY_SYMBOL,
  InsiderSentimentsData.JSON_PROPERTY_YEAR,
  InsiderSentimentsData.JSON_PROPERTY_MONTH,
  InsiderSentimentsData.JSON_PROPERTY_CHANGE,
  InsiderSentimentsData.JSON_PROPERTY_MSPR
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-29T21:39:04.016977118Z[Etc/UTC]", comments = "Generator version: 7.14.0")
public class InsiderSentimentsData {
  public static final String JSON_PROPERTY_SYMBOL = "symbol";
  @javax.annotation.Nullable
  private String symbol;

  public static final String JSON_PROPERTY_YEAR = "year";
  @javax.annotation.Nullable
  private Long year;

  public static final String JSON_PROPERTY_MONTH = "month";
  @javax.annotation.Nullable
  private Long month;

  public static final String JSON_PROPERTY_CHANGE = "change";
  @javax.annotation.Nullable
  private Long change;

  public static final String JSON_PROPERTY_MSPR = "mspr";
  @javax.annotation.Nullable
  private Float mspr;

  public InsiderSentimentsData() {
  }

  public InsiderSentimentsData symbol(@javax.annotation.Nullable String symbol) {
    
    this.symbol = symbol;
    return this;
  }

  /**
   * Symbol.
   * @return symbol
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSymbol() {
    return symbol;
  }


  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSymbol(@javax.annotation.Nullable String symbol) {
    this.symbol = symbol;
  }

  public InsiderSentimentsData year(@javax.annotation.Nullable Long year) {
    
    this.year = year;
    return this;
  }

  /**
   * Year.
   * @return year
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getYear() {
    return year;
  }


  @JsonProperty(JSON_PROPERTY_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setYear(@javax.annotation.Nullable Long year) {
    this.year = year;
  }

  public InsiderSentimentsData month(@javax.annotation.Nullable Long month) {
    
    this.month = month;
    return this;
  }

  /**
   * Month.
   * @return month
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getMonth() {
    return month;
  }


  @JsonProperty(JSON_PROPERTY_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMonth(@javax.annotation.Nullable Long month) {
    this.month = month;
  }

  public InsiderSentimentsData change(@javax.annotation.Nullable Long change) {
    
    this.change = change;
    return this;
  }

  /**
   * Net buying/selling from all insiders&#39; transactions.
   * @return change
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getChange() {
    return change;
  }


  @JsonProperty(JSON_PROPERTY_CHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChange(@javax.annotation.Nullable Long change) {
    this.change = change;
  }

  public InsiderSentimentsData mspr(@javax.annotation.Nullable Float mspr) {
    
    this.mspr = mspr;
    return this;
  }

  /**
   * Monthly share purchase ratio.
   * @return mspr
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MSPR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getMspr() {
    return mspr;
  }


  @JsonProperty(JSON_PROPERTY_MSPR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMspr(@javax.annotation.Nullable Float mspr) {
    this.mspr = mspr;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InsiderSentimentsData insiderSentimentsData = (InsiderSentimentsData) o;
    return Objects.equals(this.symbol, insiderSentimentsData.symbol) &&
        Objects.equals(this.year, insiderSentimentsData.year) &&
        Objects.equals(this.month, insiderSentimentsData.month) &&
        Objects.equals(this.change, insiderSentimentsData.change) &&
        Objects.equals(this.mspr, insiderSentimentsData.mspr);
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbol, year, month, change, mspr);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InsiderSentimentsData {\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    year: ").append(toIndentedString(year)).append("\n");
    sb.append("    month: ").append(toIndentedString(month)).append("\n");
    sb.append("    change: ").append(toIndentedString(change)).append("\n");
    sb.append("    mspr: ").append(toIndentedString(mspr)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

