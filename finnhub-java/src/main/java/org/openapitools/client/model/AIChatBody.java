/*
 * Finnhub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AIChatMessage;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AIChatBody
 */
@JsonPropertyOrder({
  AIChatBody.JSON_PROPERTY_MESSAGES,
  AIChatBody.JSON_PROPERTY_STREAM
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class AIChatBody {
  public static final String JSON_PROPERTY_MESSAGES = "messages";
  @javax.annotation.Nonnull
  private List<AIChatMessage> messages = new ArrayList<>();

  public static final String JSON_PROPERTY_STREAM = "stream";
  @javax.annotation.Nullable
  private Boolean stream;

  public AIChatBody() {
  }

  public AIChatBody messages(@javax.annotation.Nonnull List<AIChatMessage> messages) {
    
    this.messages = messages;
    return this;
  }

  public AIChatBody addMessagesItem(AIChatMessage messagesItem) {
    if (this.messages == null) {
      this.messages = new ArrayList<>();
    }
    this.messages.add(messagesItem);
    return this;
  }

  /**
   * Messages
   * @return messages
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MESSAGES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<AIChatMessage> getMessages() {
    return messages;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMessages(@javax.annotation.Nonnull List<AIChatMessage> messages) {
    this.messages = messages;
  }

  public AIChatBody stream(@javax.annotation.Nullable Boolean stream) {
    
    this.stream = stream;
    return this;
  }

  /**
   * Stream responses
   * @return stream
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STREAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getStream() {
    return stream;
  }


  @JsonProperty(JSON_PROPERTY_STREAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStream(@javax.annotation.Nullable Boolean stream) {
    this.stream = stream;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AIChatBody aiChatBody = (AIChatBody) o;
    return Objects.equals(this.messages, aiChatBody.messages) &&
        Objects.equals(this.stream, aiChatBody.stream);
  }

  @Override
  public int hashCode() {
    return Objects.hash(messages, stream);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AIChatBody {\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    stream: ").append(toIndentedString(stream)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

