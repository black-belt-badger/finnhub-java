/*
 * Finnhub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.MutualFundSectorExposureData;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * MutualFundSectorExposure
 */
@JsonPropertyOrder({
  MutualFundSectorExposure.JSON_PROPERTY_SYMBOL,
  MutualFundSectorExposure.JSON_PROPERTY_SECTOR_EXPOSURE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-29T21:39:04.016977118Z[Etc/UTC]", comments = "Generator version: 7.14.0")
public class MutualFundSectorExposure {
  public static final String JSON_PROPERTY_SYMBOL = "symbol";
  @javax.annotation.Nullable
  private String symbol;

  public static final String JSON_PROPERTY_SECTOR_EXPOSURE = "sectorExposure";
  @javax.annotation.Nullable
  private List<MutualFundSectorExposureData> sectorExposure = new ArrayList<>();

  public MutualFundSectorExposure() {
  }

  public MutualFundSectorExposure symbol(@javax.annotation.Nullable String symbol) {
    
    this.symbol = symbol;
    return this;
  }

  /**
   * Mutual symbol.
   * @return symbol
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSymbol() {
    return symbol;
  }


  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSymbol(@javax.annotation.Nullable String symbol) {
    this.symbol = symbol;
  }

  public MutualFundSectorExposure sectorExposure(@javax.annotation.Nullable List<MutualFundSectorExposureData> sectorExposure) {
    
    this.sectorExposure = sectorExposure;
    return this;
  }

  public MutualFundSectorExposure addSectorExposureItem(MutualFundSectorExposureData sectorExposureItem) {
    if (this.sectorExposure == null) {
      this.sectorExposure = new ArrayList<>();
    }
    this.sectorExposure.add(sectorExposureItem);
    return this;
  }

  /**
   * Array of sector and exposure levels.
   * @return sectorExposure
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECTOR_EXPOSURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<MutualFundSectorExposureData> getSectorExposure() {
    return sectorExposure;
  }


  @JsonProperty(JSON_PROPERTY_SECTOR_EXPOSURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSectorExposure(@javax.annotation.Nullable List<MutualFundSectorExposureData> sectorExposure) {
    this.sectorExposure = sectorExposure;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MutualFundSectorExposure mutualFundSectorExposure = (MutualFundSectorExposure) o;
    return Objects.equals(this.symbol, mutualFundSectorExposure.symbol) &&
        Objects.equals(this.sectorExposure, mutualFundSectorExposure.sectorExposure);
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbol, sectorExposure);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MutualFundSectorExposure {\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    sectorExposure: ").append(toIndentedString(sectorExposure)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

