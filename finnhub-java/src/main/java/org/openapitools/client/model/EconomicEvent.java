/*
 * Finnhub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * EconomicEvent
 */
@JsonPropertyOrder({
  EconomicEvent.JSON_PROPERTY_ACTUAL,
  EconomicEvent.JSON_PROPERTY_PREV,
  EconomicEvent.JSON_PROPERTY_COUNTRY,
  EconomicEvent.JSON_PROPERTY_UNIT,
  EconomicEvent.JSON_PROPERTY_ESTIMATE,
  EconomicEvent.JSON_PROPERTY_EVENT,
  EconomicEvent.JSON_PROPERTY_IMPACT,
  EconomicEvent.JSON_PROPERTY_TIME
})
@JsonTypeName("Economic event")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class EconomicEvent {
  public static final String JSON_PROPERTY_ACTUAL = "actual";
  @javax.annotation.Nullable
  private Float actual;

  public static final String JSON_PROPERTY_PREV = "prev";
  @javax.annotation.Nullable
  private Float prev;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  @javax.annotation.Nullable
  private String country;

  public static final String JSON_PROPERTY_UNIT = "unit";
  @javax.annotation.Nullable
  private String unit;

  public static final String JSON_PROPERTY_ESTIMATE = "estimate";
  @javax.annotation.Nullable
  private Float estimate;

  public static final String JSON_PROPERTY_EVENT = "event";
  @javax.annotation.Nullable
  private String event;

  public static final String JSON_PROPERTY_IMPACT = "impact";
  @javax.annotation.Nullable
  private String impact;

  public static final String JSON_PROPERTY_TIME = "time";
  @javax.annotation.Nullable
  private String time;

  public EconomicEvent() {
  }

  public EconomicEvent actual(@javax.annotation.Nullable Float actual) {
    
    this.actual = actual;
    return this;
  }

  /**
   * Actual release
   * @return actual
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTUAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getActual() {
    return actual;
  }


  @JsonProperty(JSON_PROPERTY_ACTUAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActual(@javax.annotation.Nullable Float actual) {
    this.actual = actual;
  }

  public EconomicEvent prev(@javax.annotation.Nullable Float prev) {
    
    this.prev = prev;
    return this;
  }

  /**
   * Previous release
   * @return prev
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getPrev() {
    return prev;
  }


  @JsonProperty(JSON_PROPERTY_PREV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrev(@javax.annotation.Nullable Float prev) {
    this.prev = prev;
  }

  public EconomicEvent country(@javax.annotation.Nullable String country) {
    
    this.country = country;
    return this;
  }

  /**
   * Country
   * @return country
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(@javax.annotation.Nullable String country) {
    this.country = country;
  }

  public EconomicEvent unit(@javax.annotation.Nullable String unit) {
    
    this.unit = unit;
    return this;
  }

  /**
   * Unit
   * @return unit
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUnit() {
    return unit;
  }


  @JsonProperty(JSON_PROPERTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnit(@javax.annotation.Nullable String unit) {
    this.unit = unit;
  }

  public EconomicEvent estimate(@javax.annotation.Nullable Float estimate) {
    
    this.estimate = estimate;
    return this;
  }

  /**
   * Estimate
   * @return estimate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ESTIMATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getEstimate() {
    return estimate;
  }


  @JsonProperty(JSON_PROPERTY_ESTIMATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEstimate(@javax.annotation.Nullable Float estimate) {
    this.estimate = estimate;
  }

  public EconomicEvent event(@javax.annotation.Nullable String event) {
    
    this.event = event;
    return this;
  }

  /**
   * Event
   * @return event
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EVENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEvent() {
    return event;
  }


  @JsonProperty(JSON_PROPERTY_EVENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEvent(@javax.annotation.Nullable String event) {
    this.event = event;
  }

  public EconomicEvent impact(@javax.annotation.Nullable String impact) {
    
    this.impact = impact;
    return this;
  }

  /**
   * Impact level
   * @return impact
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMPACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImpact() {
    return impact;
  }


  @JsonProperty(JSON_PROPERTY_IMPACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImpact(@javax.annotation.Nullable String impact) {
    this.impact = impact;
  }

  public EconomicEvent time(@javax.annotation.Nullable String time) {
    
    this.time = time;
    return this;
  }

  /**
   * Release time
   * @return time
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTime() {
    return time;
  }


  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTime(@javax.annotation.Nullable String time) {
    this.time = time;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EconomicEvent economicEvent = (EconomicEvent) o;
    return Objects.equals(this.actual, economicEvent.actual) &&
        Objects.equals(this.prev, economicEvent.prev) &&
        Objects.equals(this.country, economicEvent.country) &&
        Objects.equals(this.unit, economicEvent.unit) &&
        Objects.equals(this.estimate, economicEvent.estimate) &&
        Objects.equals(this.event, economicEvent.event) &&
        Objects.equals(this.impact, economicEvent.impact) &&
        Objects.equals(this.time, economicEvent.time);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actual, prev, country, unit, estimate, event, impact, time);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EconomicEvent {\n");
    sb.append("    actual: ").append(toIndentedString(actual)).append("\n");
    sb.append("    prev: ").append(toIndentedString(prev)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    estimate: ").append(toIndentedString(estimate)).append("\n");
    sb.append("    event: ").append(toIndentedString(event)).append("\n");
    sb.append("    impact: ").append(toIndentedString(impact)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

