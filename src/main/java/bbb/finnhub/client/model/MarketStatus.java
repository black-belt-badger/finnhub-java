/*
 * Finnhub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package bbb.finnhub.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * MarketStatus
 */
@JsonPropertyOrder({
  MarketStatus.JSON_PROPERTY_EXCHANGE,
  MarketStatus.JSON_PROPERTY_TIMEZONE,
  MarketStatus.JSON_PROPERTY_SESSION,
  MarketStatus.JSON_PROPERTY_HOLIDAY,
  MarketStatus.JSON_PROPERTY_IS_OPEN,
  MarketStatus.JSON_PROPERTY_T
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class MarketStatus {
  public static final String JSON_PROPERTY_EXCHANGE = "exchange";
  @javax.annotation.Nullable
  private String exchange;

  public static final String JSON_PROPERTY_TIMEZONE = "timezone";
  @javax.annotation.Nullable
  private String timezone;

  public static final String JSON_PROPERTY_SESSION = "session";
  @javax.annotation.Nullable
  private String session;

  public static final String JSON_PROPERTY_HOLIDAY = "holiday";
  @javax.annotation.Nullable
  private String holiday;

  public static final String JSON_PROPERTY_IS_OPEN = "isOpen";
  @javax.annotation.Nullable
  private Boolean isOpen;

  public static final String JSON_PROPERTY_T = "t";
  @javax.annotation.Nullable
  private Long t;

  public MarketStatus() {
  }

  public MarketStatus exchange(@javax.annotation.Nullable String exchange) {
    
    this.exchange = exchange;
    return this;
  }

  /**
   * Exchange.
   * @return exchange
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXCHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExchange() {
    return exchange;
  }


  @JsonProperty(JSON_PROPERTY_EXCHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExchange(@javax.annotation.Nullable String exchange) {
    this.exchange = exchange;
  }

  public MarketStatus timezone(@javax.annotation.Nullable String timezone) {
    
    this.timezone = timezone;
    return this;
  }

  /**
   * Timezone.
   * @return timezone
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIMEZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTimezone() {
    return timezone;
  }


  @JsonProperty(JSON_PROPERTY_TIMEZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimezone(@javax.annotation.Nullable String timezone) {
    this.timezone = timezone;
  }

  public MarketStatus session(@javax.annotation.Nullable String session) {
    
    this.session = session;
    return this;
  }

  /**
   * Market session. Can be 1 of the following values: &lt;code&gt;pre-market&lt;/code&gt;,&lt;code&gt;regular&lt;/code&gt;,&lt;code&gt;post-market&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt; if the market is closed.
   * @return session
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SESSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSession() {
    return session;
  }


  @JsonProperty(JSON_PROPERTY_SESSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSession(@javax.annotation.Nullable String session) {
    this.session = session;
  }

  public MarketStatus holiday(@javax.annotation.Nullable String holiday) {
    
    this.holiday = holiday;
    return this;
  }

  /**
   * Holiday event.
   * @return holiday
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HOLIDAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHoliday() {
    return holiday;
  }


  @JsonProperty(JSON_PROPERTY_HOLIDAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHoliday(@javax.annotation.Nullable String holiday) {
    this.holiday = holiday;
  }

  public MarketStatus isOpen(@javax.annotation.Nullable Boolean isOpen) {
    
    this.isOpen = isOpen;
    return this;
  }

  /**
   * Whether the market is open at the moment.
   * @return isOpen
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_OPEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsOpen() {
    return isOpen;
  }


  @JsonProperty(JSON_PROPERTY_IS_OPEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsOpen(@javax.annotation.Nullable Boolean isOpen) {
    this.isOpen = isOpen;
  }

  public MarketStatus t(@javax.annotation.Nullable Long t) {
    
    this.t = t;
    return this;
  }

  /**
   * Current timestamp.
   * @return t
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getT() {
    return t;
  }


  @JsonProperty(JSON_PROPERTY_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setT(@javax.annotation.Nullable Long t) {
    this.t = t;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MarketStatus marketStatus = (MarketStatus) o;
    return Objects.equals(this.exchange, marketStatus.exchange) &&
        Objects.equals(this.timezone, marketStatus.timezone) &&
        Objects.equals(this.session, marketStatus.session) &&
        Objects.equals(this.holiday, marketStatus.holiday) &&
        Objects.equals(this.isOpen, marketStatus.isOpen) &&
        Objects.equals(this.t, marketStatus.t);
  }

  @Override
  public int hashCode() {
    return Objects.hash(exchange, timezone, session, holiday, isOpen, t);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MarketStatus {\n");
    sb.append("    exchange: ").append(toIndentedString(exchange)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    session: ").append(toIndentedString(session)).append("\n");
    sb.append("    holiday: ").append(toIndentedString(holiday)).append("\n");
    sb.append("    isOpen: ").append(toIndentedString(isOpen)).append("\n");
    sb.append("    t: ").append(toIndentedString(t)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

